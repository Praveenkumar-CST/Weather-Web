@page "/dashboard"
@using System.Net.Http.Json
@inject HttpClient Http

<PageTitle>Weather Dashboard</PageTitle>

<div class="dashboard-wrapper">
<header class="dashboard-header">
<h1>Weather Dashboard</h1>
<span class="globe-emoji">üåé</span>
</header>

<main class="dashboard-content">
@if (isLoading)
        {
<div class="loading-container">
<div class="spinner"></div>
<p>Loading weather data...</p>
</div>
        }
else if (topCitiesWeather.Any())
        {
<div class="weather-grid">
@foreach (var city in topCitiesWeather)
                {
<div class="weather-card" style="background: @GetCityColor(city.City)">
<div class="card-header">
<h2>@city.City</h2>
<span class="temp">@city.Temp.ToString("N1")¬∞C</span>
</div>
<div class="card-body">
<p class="weather-desc">@city.Weather</p>
<div class="weather-stats">
<span>üíß @city.Humidity%</span>
<span>üí® @city.WindSpeed m/s</span>
<span>‚è≤ @city.Pressure hPa</span>
</div>
</div>
</div>
                }
</div>
        }
else
        {
<div class="empty-state">
<p>No weather data available</p>
</div>
        }

@if (!string.IsNullOrEmpty(errorMessage))
        {
<div class="error-alert">
<span>‚ö†Ô∏è @errorMessage</span>
<button @onclick="() => errorMessage = ''">√ó</button>
</div>
        }
</main>
</div>

<style>
.dashboard-wrapper {
min-height: 100vh;
background: linear-gradient(145deg, #1abc9c 0%, #3498db 100%);
padding: 2rem;
    }

.dashboard-header {
text-align: center;
margin-bottom: 2.5rem;
position: relative;
    }

.dashboard-header h1 {
color: #ffffff;
font-size: 2.8rem;
font-weight: 800;
margin: 0;
text-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
    }

.globe-emoji {
font-size: 2.2rem;
position: absolute;
top: -15px;
right: 50%;
transform: translateX(50%);
    }

.weather-grid {
display: flex;
justify-content: space-around;
gap: 1rem;
max-width: 1600px;
margin: 0 auto;
flex-wrap: wrap;
padding: 0 1rem;
    }

.weather-card {
background: rgba(255, 255, 255, 0.95);
border-radius: 12px;
width: 100%;
max-width: 260px;
box-shadow: 0 6px 20px rgba(0, 0, 0, 0.15);
transition: transform 0.3s ease;
overflow: hidden;
    }

.weather-card:hover {
transform: translateY(-5px);
    }

.card-header {
padding: 1rem;
color: white;
display: flex;
justify-content: space-between;
align-items: center;
font-weight: 600;
    }

.card-body {
padding: 1rem;
background: white;
    }

.weather-desc {
color: #666;
font-size: 1rem;
text-transform: capitalize;
margin: 0 0 0.8rem 0;
font-weight: 500;
    }

.weather-stats {
display: flex;
justify-content: space-between;
font-size: 0.9rem;
color: #444;
font-weight: 500;
    }

.loading-container {
display: flex;
flex-direction: column;
align-items: center;
gap: 1rem;
color: #ffffff;
margin: 4rem auto;
    }

.spinner {
width: 48px;
height: 48px;
border: 5px solid rgba(255, 255, 255, 0.3);
border-top: 5px solid #ffffff;
border-radius: 50%;
animation: spin 1s linear infinite;
    }

.empty-state {
text-align: center;
color: #ffffff;
padding: 2rem;
background: rgba(0, 0, 0, 0.3);
border-radius: 10px;
margin: 2rem auto;
max-width: 500px;
    }

.error-alert {
position: fixed;
bottom: 1.5rem;
right: 1.5rem;
background: #e74c3c;
color: #ffffff;
padding: 0.8rem 1.5rem;
border-radius: 8px;
display: flex;
align-items: center;
gap: 1rem;
box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
font-weight: 500;
    }
</style>
